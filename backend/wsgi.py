#!/usr/bin/env python
"""
üöÄ WSGI Configuration pour DeepSeek Coder Web Generator
Configuration optimis√©e pour d√©ploiement serveur en production
"""

import sys
import os
import logging

# üîπ Configuration du logging pour la production
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# üîπ D√©finir le chemin du projet de mani√®re absolue
PROJECT_PATH = os.path.dirname(os.path.abspath(__file__))
PARENT_PATH = os.path.dirname(PROJECT_PATH)

# üîπ Ajouter les chemins n√©cessaires dans sys.path
sys.path.insert(0, PROJECT_PATH)
sys.path.insert(0, PARENT_PATH)

# üîπ Variables d'environnement pour la configuration
os.environ.setdefault('FLASK_ENV', 'production')
os.environ.setdefault('FLASK_DEBUG', 'False')

# üîπ Configuration du mod√®le selon les ressources serveur
# Ajustez MODEL_SIZE selon votre serveur : 1.3b, 6.7b
os.environ.setdefault('MODEL_SIZE', '6.7b')  # Par d√©faut : mod√®le l√©ger

try:
    # üîπ Import de l'application Flask
    from app import app as application
    
    # üîπ Configuration suppl√©mentaire pour la production
    application.config.update(
        SECRET_KEY=os.environ.get('SECRET_KEY', os.urandom(24)),
        MAX_CONTENT_LENGTH=16 * 1024 * 1024,  # 16MB max
        JSON_SORT_KEYS=False,
        JSONIFY_PRETTYPRINT_REGULAR=False
    )
    
    logging.info("‚úÖ Application WSGI charg√©e avec succ√®s")
    logging.info(f"üìÅ Chemin du projet: {PROJECT_PATH}")
    logging.info(f"ü§ñ Taille du mod√®le: {os.environ.get('MODEL_SIZE', '1.3b')}")
    
except ImportError as e:
    logging.error(f"‚ùå Erreur d'import de l'application: {e}")
    raise
except Exception as e:
    logging.error(f"‚ùå Erreur de configuration: {e}")
    raise

# üîπ Point d'entr√©e pour tests locaux
if __name__ == "__main__":
    # Mode d√©veloppement local uniquement
    port = int(os.environ.get('PORT', 5000))
    application.run(
        host='0.0.0.0',
        port=port,
        debug=os.environ.get('FLASK_DEBUG', 'False').lower() == 'true'
    )